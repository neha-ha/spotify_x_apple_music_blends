using this tutorial series https://www.youtube.com/watch?v=RG_KF3w3btQ&t=0s that creates a spotify to apple music playlist transfer web app


main packages and what they are for: 

1: cors- 
    - when your web app has important info / features, you want to make sure that only certain other websites can use them. cors helps set up rules so that only the websites you trust can request data from ur web app

2: express- 
    - provides frameworks for building the backend (server) side of web apps. most of this functionality is needed, and while u can do it from scratch, express is a shortcut
        - allows you to define routes
            - routing = how can you access x on your website?
                - i.e. someone wants to go to the "About Us" page of the website. when their browser asks for it, our server uses routing to figure out where that page is and sends them there
        - provides many middleware functions (functions that have access to the request and response objects.. these functions can modify rq and responses, execute code, and terminate the rq-response cycle)
        - simplifies handling HTTP requests and responses
        - provides utilities for handling file uploads, cookies, sessions
        - can serve static files (HTML, CSS, etc) from a specified directory (useful for frontend)

3: querystring
    - allows you to filter / request only specific data during api calls, i.e. www.example.com?color=blue
        - allows you to do the ?color=blue part of it

4: jsonwebtoken
    - give a jwt to authorized users after log in
    - jwt included in every request from that user hereafter
    - makes sure that the requesting user is the same one that logged in


STEP 1: USER AUTHENTICATION explained

spotify
    - user initiates the authorization process by clicking a button with "log in with spotify" 
    - our application redirects the user to Spotify's authorization endpoint (endpoint = location where you can send/receive information, point of contact between us and the API)
        - we provide specific parameters-- including client ID, requested permissions, and a redirect URI where spotify should send the user after authentication (in this case, back to our website)
    - after auth, spotify redirects user to our website again allong with an authorization code
    - we provide the authorization code, client id, and client secret to spotify's token endpoint & receive an access token and a refresh token
        - access token can be used to make authorized api requests on behalf of the user-- get their data, make playlists, etc
        - refresh token is used to obtain new access tokens when the current one expires 

apple
    - does not have any auth code, etc, etc, 